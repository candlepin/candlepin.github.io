{"swagger":"2.0","info":{"description":"Candlepin is subscription management server written in Java. It helps with management of software subscriptions.","version":"2.1.25","title":"Candlepin"},"basePath":"/candlepin","tags":[{"name":"owners"},{"name":"consumers"},{"name":"entitlements"},{"name":"consumertypes"},{"name":"deleted_consumers"},{"name":"activation_keys"},{"name":"pools"},{"name":"environments"},{"name":"events"},{"name":"status"},{"name":"distributor_versions"},{"name":"products"},{"name":"rules"},{"name":"admin"},{"name":"serials"},{"name":"content"},{"name":"users"},{"name":"crl"},{"name":"cdn"},{"name":"subscriptions"},{"name":"jobs"},{"name":"hypervisors"},{"name":"roles"},{"name":"atom"}],"schemes":["https"],"paths":{"/activation_keys":{"get":{"tags":["activation_keys"],"summary":"findActivationKey","description":"Retrieves a list of Activation Keys","operationId":"findActivationKey","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ActivationKey"}}}},"security":[{"basic":[]}]}},"/activation_keys/{activation_key_id}":{"get":{"tags":["activation_keys"],"summary":"Get Activation Key","description":"Retrieves a single Activation Key","operationId":"getActivationKey","produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKeyData"}},"400":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["activation_keys"],"summary":"Update Activation Key","description":"Updates an Activation Key","operationId":"updateActivationKey","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"},{"in":"body","name":"update","required":true,"schema":{"$ref":"#/definitions/ActivationKeyData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKeyData"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["activation_keys"],"summary":"deleteActivationKey","description":"Removes an Activation Key","operationId":"deleteActivationKey","produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""}},"security":[{"basic":[]}]}},"/activation_keys/{activation_key_id}/content_overrides":{"get":{"tags":["activation_keys"],"operationId":"getContentOverrideList","parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}},"headers":{}}},"security":[{"basic":[]}]},"put":{"tags":["activation_keys"],"operationId":"addContentOverrides","parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ContentOverride"}}}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}},"headers":{}}},"security":[{"basic":[]}]},"delete":{"tags":["activation_keys"],"operationId":"deleteContentOverrides","parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ContentOverride"}}}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}},"headers":{}}},"security":[{"basic":[]}]}},"/activation_keys/{activation_key_id}/pools":{"get":{"tags":["activation_keys"],"summary":"Get Activation Key Pools","description":"Retrieves a list of Pools based on the Activation Key","operationId":"getActivationKeyPools","produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/pool"}}},"400":{"description":""}},"security":[{"basic":[]}]}},"/activation_keys/{activation_key_id}/pools/{pool_id}":{"post":{"tags":["activation_keys"],"summary":"Add Pool to Key","description":"Adds a Pool to an Activation Key","operationId":"addPoolToKey","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"},{"name":"pool_id","in":"path","required":true,"type":"string"},{"name":"quantity","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKeyData"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["activation_keys"],"summary":"Remove Pool From Key","description":"Removes a Pool from an Activation Key","operationId":"removePoolFromKey","produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"},{"name":"pool_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKeyData"}},"400":{"description":""}},"security":[{"basic":[]}]}},"/activation_keys/{activation_key_id}/product/{product_id}":{"post":{"tags":["activation_keys"],"summary":"Add Product ID to key","description":"Adds an Product ID to an Activation Key","operationId":"addProductIdToKey","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKeyData"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["activation_keys"],"summary":"Remove Product Id from Key","description":"Removes a Product ID from an Activation Key","operationId":"removeProductIdFromKey","produces":["application/json"],"parameters":[{"name":"activation_key_id","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKeyData"}},"400":{"description":""}},"security":[{"basic":[]}]}},"/admin/cache/product":{"delete":{"tags":["admin"],"summary":"Clear product cache","description":"Clears the product cache","operationId":"clearProductCache","produces":["application/json"],"parameters":[],"responses":{"default":{"description":"successful operation"}}}},"/admin/init":{"get":{"tags":["admin"],"summary":"initialize","description":"Initializes the Candlepin database. Currently this just creates the admin user for standalone deployments using the default user service adapter. It must be called once after candlepin is installed, repeat calls are not required, but will be harmless. The String returned is the description if the db was or already is initialized.","operationId":"initialize","produces":["text/plain"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}}}}},"/admin/queues":{"get":{"tags":["admin"],"summary":"Get Queue Stats","description":"Basic information on the HornetQ queues and how many messages are pending in each.","operationId":"getQueueStats","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/QueueStatus"}}}}}},"/atom":{"get":{"tags":["atom"],"summary":"getFeed","description":"Retrieves an Event Atom Feed","operationId":"getFeed","produces":["application/atom+xml","application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/feed"}}},"security":[{"basic":[]}]}},"/cdn":{"get":{"tags":["cdn"],"summary":"getContentDeliveryNetworks","description":"Retrieves a list of CDN's","operationId":"getContentDeliveryNetworks","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Cdn"}}}},"security":[{"basic":[]}]},"post":{"tags":["cdn"],"summary":"create","description":"Creates a CDN @return a Cdn object","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"cdn","required":true,"schema":{"$ref":"#/definitions/Cdn"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Cdn"}}},"security":[{"basic":[]}]}},"/cdn/{label}":{"put":{"tags":["cdn"],"summary":"update","description":"Updates a CDN @return a Cdn object","operationId":"update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"label","in":"path","required":true,"type":"string"},{"in":"body","name":"cdn","required":true,"schema":{"$ref":"#/definitions/Cdn"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Cdn"}}},"security":[{"basic":[]}]},"delete":{"tags":["cdn"],"summary":"delete","description":"Removes a CDN","operationId":"delete","produces":["*/*"],"parameters":[{"name":"label","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers":{"get":{"tags":["consumers"],"summary":"list","description":"Retrieves a list of the Consumers","operationId":"list","produces":["application/json"],"parameters":[{"name":"username","in":"query","required":false,"type":"string"},{"name":"type","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"owner","in":"query","required":false,"type":"string"},{"name":"uuid","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"hypervisor_id","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"fact","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Consumer"}}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]},"post":{"tags":["consumers"],"summary":"create","description":"Creates a Consumer. NOTE: Opening this method up to everyone, as we have nothing we can reliably verify in the method signature. Instead we have to figure out what owner this consumer is destined for (due to backward compatability with existing clients which do not specify an owner during registration), and then check the access to the specified owner in the method itself.","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"consumer","required":true,"schema":{"$ref":"#/definitions/Consumer"}},{"name":"username","in":"query","required":false,"type":"string"},{"name":"owner","in":"query","required":false,"type":"string"},{"name":"activation_keys","in":"query","required":false,"type":"string"},{"name":"identity_cert_creation","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Consumer"}},"400":{"description":""},"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/compliance":{"get":{"tags":["consumers"],"summary":"getComplianceStatusList","description":"Retrieves a Compliance Status list for a list of Consumers","operationId":"getComplianceStatusList","produces":["application/json"],"parameters":[{"name":"uuid","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/ComplianceStatus"}}}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}":{"get":{"tags":["consumers"],"summary":"getConsumer","description":"Retrieves a single Consumer","operationId":"getConsumer","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Consumer"}},"404":{"description":""}},"security":[{"basic":[]}]},"post":{"tags":["consumers"],"summary":"regenerateIdentityCertificates","description":"Retrieves a single Consumer","operationId":"regenerateIdentityCertificates","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Consumer"}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["consumers"],"summary":"updateConsumer","description":"Updates a Consumer","operationId":"updateConsumer","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"in":"body","name":"consumer","required":true,"schema":{"$ref":"#/definitions/Consumer"}}],"responses":{"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["consumers"],"summary":"deleteConsumer","description":"Removes a Consumer","operationId":"deleteConsumer","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"410":{"description":"Target consumer was already deleted."},"403":{"description":"Invalid access rights to unregister the Consumer."},"404":{"description":"Target consumer does not exist."}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/accessible_content":{"get":{"tags":["consumers"],"summary":"getContentAccessBody","description":"Retrieves the body of the Content Access Certificate for the Consumer","operationId":"getContentAccessBody","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"If-Modified-Since","in":"header","required":false,"type":"string","default":"Thu, 01 Jan 1970 00:00:00 GMT","format":"date-time"}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}},"304":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/atom":{"get":{"tags":["consumers"],"summary":"getConsumerAtomFeed","description":"Retrieves and Event Atom Feed for a Consumer","operationId":"getConsumerAtomFeed","produces":["application/atom+xml"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/feed"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/certificates":{"get":{"tags":["consumers"],"summary":"getEntitlementCertificates","description":"Retrieves a list of Entitlement Certificates for the Consumer","operationId":"getEntitlementCertificates","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"serials","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Certificate"}}},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["consumers"],"summary":"regenerateEntitlementCertificates","description":"Regenerates the Entitlement Certificates for a Consumer","operationId":"regenerateEntitlementCertificates","consumes":["*/*"],"produces":["*/*"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"entitlement","in":"query","required":false,"type":"string"},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/certificates/serials":{"get":{"tags":["consumers"],"summary":"getEntitlementCertificateSerials","description":"Retrieves a list of Certiticate Serials Return the client certificate metadata a for the given consumer. This is a small subset of data clients can use to determine which certificates they need to update/fetch.","operationId":"getEntitlementCertificateSerials","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/serials"}}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/certificates/{serial}":{"delete":{"tags":["consumers"],"summary":"unbindBySerial","description":"Removes an Entitlement from a Consumer By the Certificate Serial","operationId":"unbindBySerial","produces":["*/*"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"serial","in":"path","required":true,"type":"integer","format":"int64"}],"responses":{"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/compliance":{"get":{"tags":["consumers"],"summary":"getComplianceStatus","description":"Retireves the Compliance Status of a Consumer.","operationId":"getComplianceStatus","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"on_date","in":"query","description":"Date to get compliance information for, default is now.","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ComplianceStatus"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/content_overrides":{"get":{"tags":["consumers"],"operationId":"getContentOverrideList","parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}},"headers":{}}},"security":[{"basic":[]}]},"put":{"tags":["consumers"],"operationId":"addContentOverrides","parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ContentOverride"}}}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}},"headers":{}}},"security":[{"basic":[]}]},"delete":{"tags":["consumers"],"operationId":"deleteContentOverrides","parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ContentOverride"}}}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}},"headers":{}}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/deletionrecord":{"delete":{"tags":["consumers"],"summary":"removeDeletionRecord","description":"Removes the Deletion Record for a Consumer Allowed for a superadmin. The main use case for this would be if a user accidently deleted a non-RHEL hypervisor, causing it to no longer be auto-detected via virt-who.","operationId":"removeDeletionRecord","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/entitlements":{"get":{"tags":["consumers"],"summary":"listEntitlements","description":"Retrives a list of Entitlements","operationId":"listEntitlements","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"product","in":"query","required":false,"type":"string"},{"name":"regen","in":"query","required":false,"type":"boolean","default":true},{"name":"matches","in":"query","required":false,"type":"string"},{"name":"attribute","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Entitlement"}}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]},"post":{"tags":["consumers"],"summary":"Bind Entitlements","description":"If a pool ID is specified, we know we're binding to that exact pool. Specifying an entitle date in this case makes no sense and will throw an error. If a list of product IDs are specified, we attempt to auto-bind to subscriptions which will provide those products. An optional date can be specified allowing the consumer to get compliant for some date in the future. If no date is specified we assume the current date. If neither a pool nor an ID is specified, this is a healing request. The path is similar to the bind by products, but in this case we use the installed products on the consumer, and their current compliant status, to determine which product IDs should be requested. The entitle date is used the same as with bind by products. The response will contain a list of Entitlement objects if async is false, or a JobDetail object if async is true.","operationId":"bind","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"pool","in":"query","required":false,"type":"string"},{"name":"product","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"quantity","in":"query","required":false,"type":"integer","format":"int32"},{"name":"email","in":"query","required":false,"type":"string"},{"name":"email_locale","in":"query","required":false,"type":"string"},{"name":"async","in":"query","required":false,"type":"boolean","default":false},{"name":"entitle_date","in":"query","required":false,"type":"string"},{"name":"from_pool","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"400":{"description":""},"403":{"description":"Binds Entitlements"},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["consumers"],"summary":"unbindAll","description":"Unbinds all Entitlements for a Consumer Result contains the total number of entitlements unbound.","operationId":"unbindAll","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeleteResult"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/entitlements/dry-run":{"get":{"tags":["consumers"],"summary":"dryBind","description":"Retrieves a list of Pools and quantities that would be the result of an auto-bind. This is a dry run of an autobind. It allows the client to see what would be the result of an autobind without executing it. It can only do this for the prevously established list of installed products for the consumer If a service level is included in the request, then that level will override the one stored on the consumer. If no service level is included then the existing one will be used. The Response has a list of PoolQuantity objects","operationId":"dryBind","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"service_level","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/poolquantity"}}},"400":{"description":""},"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/entitlements/pool/{pool_id}":{"delete":{"tags":["consumers"],"summary":"unbindByPool","description":"Removes all Entitlements from a Consumer. By Pool Id","operationId":"unbindByPool","produces":["*/*"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"pool_id","in":"path","required":true,"type":"string"}],"responses":{"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/entitlements/{dbid}":{"delete":{"tags":["consumers"],"summary":"unbind","description":"Removes an Entitlement from a Consumer By the Entitlement ID","operationId":"unbind","produces":["*/*"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"dbid","in":"path","required":true,"type":"string"}],"responses":{"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/events":{"get":{"tags":["consumers"],"summary":"getConsumerEvents","description":"Retrieves a list of Consumer Events","operationId":"getConsumerEvents","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Event"}}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/exists":{"head":{"tags":["consumers"],"summary":"","description":"Checks for the existence of a Consumer. This method is used to check if a consumer is available on a particular shard.  There is no need to do a full GET for the consumer for this check.","operationId":"consumerExists","produces":["*/*"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"204":{"description":"If the consumer exists and can be accessed"},"404":{"description":"If the consumer doesn't exist or cannot be accessed"}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/export":{"get":{"tags":["consumers"],"summary":"Consumer Export (manifest)","description":"Retrieves a Compressed File representation of a Consumer (manifest).","operationId":"exportData","produces":["application/zip"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"cdn_label","in":"query","required":false,"type":"string"},{"name":"webapp_prefix","in":"query","required":false,"type":"string"},{"name":"api_url","in":"query","required":false,"type":"string"},{"name":"ext","in":"query","description":"Key/Value pairs to be passed to the extension adapter when generating a manifest","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","x-example":"ext=version:1.2.3&ext=extension_key:EXT1"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/File"}},"500":{"description":""},"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}],"deprecated":true}},"/consumers/{consumer_uuid}/export/async":{"get":{"tags":["consumers"],"summary":"Async Consumer Export (manifest)","description":"Initiates an async generation of a Compressed File representation of a Consumer (manifest). The response will contain the id of the job from which its result data  will contain the href to download the generated file.","operationId":"exportDataAsync","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","description":"The UUID of the target consumer","required":true,"type":"string"},{"name":"cdn_label","in":"query","description":"The lable of the target CDN","required":false,"type":"string"},{"name":"webapp_prefix","in":"query","description":"the URL pointing to the manifest's originating web application","required":false,"type":"string"},{"name":"api_url","in":"query","description":"the URL pointing to the manifest's originating candlepin API","required":false,"type":"string"},{"name":"ext","in":"query","description":"Key/Value pairs to be passed to the extension adapter when generating a manifest","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","x-example":"ext=version:1.2.3&ext=extension_key:EXT1"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"500":{"description":""},"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/export/{export_id}":{"get":{"tags":["consumers"],"summary":"Async Consumer Export (manifest) Download","description":"Downloads an asynchronously generated consumer export file (manifest).","operationId":"downloadExistingExport","produces":["application/zip"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"export_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/File"}},"500":{"description":""},"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/guestids":{"get":{"tags":["consumers"],"summary":"getGuestIds","description":"Retrieves the List of a Consumer's Guests","operationId":"getGuestIds","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/GuestId"}}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["consumers"],"summary":"updateGuests","description":"Updates the List of Guests on a Consumer This method should work just like updating the consumer, except that it only updates GuestIds.  Eventually we should move All the logic here, and depricate updating guests through the consumer update.","operationId":"updateGuests","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"in":"body","name":"guestIds","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/GuestId"}}}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/guestids/{guest_id}":{"get":{"tags":["consumers"],"summary":"getGuestId","description":"Retrieves a single Guest By its consumer and the guest UUID","operationId":"getGuestId","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"guest_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/GuestId"}}},"security":[{"basic":[]}]},"put":{"tags":["consumers"],"summary":"updateGuest","description":"Updates a single Guest on a Consumer. Allows virt-who to avoid uploading an entire list of guests","operationId":"updateGuest","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","description":"consumer who owns or hosts the guest in question","required":true,"type":"string"},{"name":"guest_id","in":"path","description":"guest virtual uuid","required":true,"type":"string"},{"in":"body","name":"updated","description":"updated guest data to use","required":true,"schema":{"$ref":"#/definitions/GuestId"}}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]},"delete":{"tags":["consumers"],"summary":"deleteGuest","description":"Removes the Guest from the Consumer","operationId":"deleteGuest","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","description":"consumer who owns or hosts the guest in question","required":true,"type":"string"},{"name":"guest_id","in":"path","required":true,"type":"string"},{"name":"unregister","in":"query","required":false,"type":"boolean","default":false}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/guests":{"get":{"tags":["consumers"],"summary":"getGuests","description":"Retrieves a list of Guest Consumers of a Consumer","operationId":"getGuests","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Consumer"}}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/host":{"get":{"tags":["consumers"],"summary":"getHost","description":"Retrieves a Host Consumer of a Consumer","operationId":"getHost","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Consumer"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/owner":{"get":{"tags":["consumers"],"summary":"getOwner","description":"Retrieves the Owner associated to a Consumer","operationId":"getOwner","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Owner"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/consumers/{consumer_uuid}/release":{"get":{"tags":["consumers"],"summary":"getRelease","description":"Retrieves the Release of a Consumer","operationId":"getRelease","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Release"}}},"security":[{"basic":[]}]}},"/consumertypes":{"get":{"tags":["consumertypes"],"summary":"list","description":"Retrieves a list of Consumer Types","operationId":"list","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/consumertype"}}}},"security":[{"basic":[]}]},"post":{"tags":["consumertypes"],"summary":"create","description":"Creates a Consumer Type","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"consumerType","required":true,"schema":{"$ref":"#/definitions/consumertype"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/consumertype"}},"400":{"description":""}},"security":[{"basic":[]}]}},"/consumertypes/{id}":{"get":{"tags":["consumertypes"],"summary":"getConsumerType","description":"Retrieves a single Consumer Type","operationId":"getConsumerType","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/consumertype"}},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["consumertypes"],"summary":"update","description":"Updates a Consumer Type","operationId":"update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"consumerType","required":true,"schema":{"$ref":"#/definitions/consumertype"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/consumertype"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["consumertypes"],"summary":"deleteConsumerType","description":"Removes a Consumer Type","operationId":"deleteConsumerType","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/content":{"get":{"tags":["content"],"summary":"list","description":"Retrieves list of Content","operationId":"list","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ContentData"}}}},"security":[{"basic":[]}]},"post":{"tags":["content"],"summary":"createContent","description":"Creates a Content","operationId":"createContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/Content"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ContentData"}}},"security":[{"basic":[]}]}},"/content/batch":{"post":{"tags":["content"],"summary":"createBatchContent","description":"Creates Contents in bulk","operationId":"createBatchContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/Content"}}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/IterableContentData"}}},"security":[{"basic":[]}]}},"/content/{content_uuid}":{"get":{"tags":["content"],"summary":"getContent","description":"Retrieves a single Content","operationId":"getContent","produces":["application/json"],"parameters":[{"name":"content_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ContentData"}},"400":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["content"],"summary":"updateContent","description":"Updates a Content","operationId":"updateContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"content_uuid","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/Content"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ContentData"}}},"security":[{"basic":[]}]},"delete":{"tags":["content"],"summary":"remove","description":"Deletes a Content","operationId":"remove","produces":["application/json"],"parameters":[{"name":"content_uuid","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/crl":{"get":{"tags":["crl"],"summary":"getCurrentCrl","description":"Retrieves the Certificate Revocation List","operationId":"getCurrentCrl","produces":["text/plain"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}}},"security":[{"basic":[]}]},"delete":{"tags":["crl"],"summary":"unrevoke","description":"Deletes a Certificate from the Revocation List","operationId":"unrevoke","produces":["application/json"],"parameters":[{"name":"serial","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/deleted_consumers":{"get":{"tags":["deleted_consumers"],"summary":"listByDate","description":"Retrieves a list of Deleted Consumers By deletion date or all. List returned is the deleted Consumers.","operationId":"listByDate","produces":["application/json"],"parameters":[{"name":"date","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/DeletedConsumer"}}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/distributor_versions":{"get":{"tags":["distributor_versions"],"summary":"getVersions","description":"Retrieves list of Distributor Versions","operationId":"getVersions","produces":["application/json"],"parameters":[{"name":"name_search","in":"query","required":false,"type":"string"},{"name":"capability","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/distributorversion"}}}},"security":[{"basic":[]}]},"post":{"tags":["distributor_versions"],"summary":"create","description":"Creates a Distributor Version","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"distributorVersion","required":true,"schema":{"$ref":"#/definitions/distributorversion"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/distributorversion"}}},"security":[{"basic":[]}]}},"/distributor_versions/{id}":{"put":{"tags":["distributor_versions"],"summary":"update","description":"Updates a Distributor Version","operationId":"update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"distributorVersion","required":true,"schema":{"$ref":"#/definitions/distributorversion"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/distributorversion"}}},"security":[{"basic":[]}]},"delete":{"tags":["distributor_versions"],"summary":"delete","description":"Deletes a Distributor Version","operationId":"delete","produces":["*/*"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/entitlements":{"get":{"tags":["entitlements"],"summary":"listAllForConsumer","description":"Retrieves list of Entitlements","operationId":"listAllForConsumer","produces":["application/json"],"parameters":[{"name":"consumer","in":"query","required":false,"type":"string"},{"name":"matches","in":"query","required":false,"type":"string"},{"name":"attribute","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Entitlement"}}},"400":{"description":""}},"security":[{"basic":[]}]}},"/entitlements/consumer/{consumer_uuid}/product/{product_id}":{"get":{"tags":["entitlements"],"summary":"hasEntitlement","description":"Checks Consumer for Product Entitlement","operationId":"hasEntitlement","produces":["application/json"],"parameters":[{"name":"consumer_uuid","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Entitlement"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/entitlements/product/{product_id}":{"put":{"tags":["entitlements"],"summary":"regenerateEntitlementCertificatesForProduct","description":"Regenerates the Entitlement Certificates for a Product","operationId":"regenerateEntitlementCertificatesForProduct","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"product_id","in":"path","required":true,"type":"string"},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"202":{"description":""}},"security":[{"basic":[]}]}},"/entitlements/{dbid}":{"delete":{"tags":["entitlements"],"summary":"unbind","description":"Deletes an Entitlement","operationId":"unbind","produces":["*/*"],"parameters":[{"name":"dbid","in":"path","required":true,"type":"string"}],"responses":{"403":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/entitlements/{dbid}/upstream_cert":{"get":{"tags":["entitlements"],"summary":"getUpstreamCert","description":"Retrieves a Subscription Certificate.  We can't return CdnInfo at this time, but when the time comes this is the implementation we want to start from. It will require changes to thumbslug.  will also @Produces(MediaType.APPLICATION_JSON)","operationId":"getUpstreamCert","produces":["text/plain"],"parameters":[{"name":"dbid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/entitlements/{entitlement_id}":{"get":{"tags":["entitlements"],"summary":"getEntitlement","description":"Retrieves a single Entitlement","operationId":"getEntitlement","produces":["application/json"],"parameters":[{"name":"entitlement_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Entitlement"}},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["entitlements"],"summary":"updateEntitlement","description":"Updates an Entitlement. This only works for the quantity.","operationId":"updateEntitlement","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"entitlement_id","in":"path","required":true,"type":"string"},{"in":"body","name":"update","required":true,"schema":{"$ref":"#/definitions/Entitlement"}}],"responses":{"404":{"description":""}},"security":[{"basic":[]}]}},"/entitlements/{entitlement_id}/migrate":{"put":{"tags":["entitlements"],"summary":"migrateEntitlement","description":"Migrate entitlements from one distributor consumer to another. Can specify full or partial quantity. No specified quantity will lead to full migration of the entitlement.","operationId":"migrateEntitlement","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"entitlement_id","in":"path","required":true,"type":"string"},{"name":"to_consumer","in":"query","required":false,"type":"string"},{"name":"quantity","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"404":{"description":""}},"security":[{"basic":[]}]}},"/environments":{"get":{"tags":["environments"],"summary":"getEnvironments","description":"Lists the Environments.  Only available to super admins.","operationId":"getEnvironments","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Environment"}}}},"security":[{"basic":[]}]}},"/environments/{env_id}":{"get":{"tags":["environments"],"summary":"getEnv","description":"Retrieves a single Environment","operationId":"getEnv","produces":["application/json"],"parameters":[{"name":"env_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Environment"}},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["environments"],"summary":"deleteEnv","description":"Deletes an environment. WARNING: this will delete all consumers in the environment and revoke their entitlement certificates.","operationId":"deleteEnv","produces":["*/*"],"parameters":[{"name":"env_id","in":"path","required":true,"type":"string"}],"responses":{"404":{"description":""}},"security":[{"basic":[]}]}},"/environments/{env_id}/consumers":{"post":{"tags":["environments"],"summary":"create","description":"Creates an Environment","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"env_id","in":"path","required":true,"type":"string"},{"in":"body","name":"consumer","required":true,"schema":{"$ref":"#/definitions/Consumer"}},{"name":"username","in":"query","required":false,"type":"string"},{"name":"owner","in":"query","required":false,"type":"string"},{"name":"activation_keys","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Consumer"}}},"security":[{"basic":[]}]}},"/environments/{env_id}/content":{"post":{"tags":["environments"],"summary":"promoteContent","description":"Promotes a Content into an Environment. This call accepts multiple content sets to promote at once, after which all affected certificates for consumers in the environment will be regenerated. Consumers registered to this environment will now receive this content in their entitlement certificates. Because the certificate regeneraiton can be quite time consuming, this is done as an asynchronous job. The content will be promoted and immediately available for new entitlements, but existing entitlements could take some time to be regenerated and sent down to clients as they check in.","operationId":"promoteContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"env_id","in":"path","required":true,"type":"string"},{"in":"body","name":"contentToPromote","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/EnvironmentContent"}}},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["environments"],"summary":"demoteContent","description":"Demotes a Content from an Environment. Consumer's registered to this environment will no see this content in their entitlement certificates. (after they are regenerated and synced to clients) This call accepts multiple content IDs to demote at once, allowing us to mass demote, then trigger a cert regeneration. NOTE: This call expects the actual content IDs, *not* the ID created for each EnvironmentContent object created after a promotion. This is to help integrate with other management apps which should not have to track/lookup a specific ID for the content to demote.","operationId":"demoteContent","produces":["application/json"],"parameters":[{"name":"env_id","in":"path","required":true,"type":"string"},{"name":"content","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"404":{"description":"When the content has already been demoted."}},"security":[{"basic":[]}]}},"/events":{"get":{"tags":["events"],"summary":"listEvents","description":"Retrieves a list of Events","operationId":"listEvents","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Event"}}}},"security":[{"basic":[]}]}},"/events/{uuid}":{"get":{"tags":["events"],"summary":"getEvent","description":"Retrieves a single Event","operationId":"getEvent","produces":["application/json"],"parameters":[{"name":"uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Event"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/hypervisors":{"post":{"tags":["hypervisors"],"summary":"hypervisorUpdate","description":"Updates the list of Hypervisor Guests Allows agents such as virt-who to update its host list and associate the guests for each host. This is typically used when a host is unable to register to candlepin via subscription manager.  In situations where consumers already exist it is probably best not to allow creation of new hypervisor consumers.  Most consumers do not have a hypervisorId attribute, so that should be added manually when necessary by the management environment. @deprecated Use the asynchronous method","operationId":"hypervisorUpdate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/GuestId"}}}},{"name":"owner","in":"query","required":false,"type":"string"},{"name":"create_missing","in":"query","description":"specify whether or not to create missing hypervisors.Default is true.  If false is specified, hypervisorIds that are not foundwill result in failed entries in the resulting HypervisorCheckInResult","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/HypervisorCheckInResult"}},"202":{"description":""}},"security":[{"basic":[]}],"deprecated":true}},"/hypervisors/{owner}":{"post":{"tags":["hypervisors"],"summary":"hypervisorUpdateAsync","description":"Creates or Updates the list of Hypervisor hosts Allows agents such as virt-who to update hosts' information . This is typically used when a host is unable to register to candlepin via subscription manager. In situations where consumers already exist it is probably best not to allow creation of new hypervisor consumers.  Most consumers do not have a hypervisorId attribute, so that should be added manually when necessary by the management environment. Default is true.  If false is specified, hypervisorIds that are not found will result in a failed state of the job.","operationId":"hypervisorUpdateAsync","consumes":["text/plain"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"string"}},{"name":"owner","in":"path","required":true,"type":"string"},{"name":"create_missing","in":"query","description":"specify whether or not to create missing hypervisors.Default is true.  If false is specified, hypervisorIds that are not foundwill result in failed entries in the resulting HypervisorCheckInResult","required":false,"type":"boolean","default":true},{"name":"reporter_id","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"202":{"description":""}},"security":[{"basic":[]}]}},"/jobs":{"get":{"tags":["jobs"],"summary":"getStatuses","description":"Retrieves a list of Job Status","operationId":"getStatuses","produces":["application/json"],"parameters":[{"name":"owner","in":"query","required":false,"type":"string"},{"name":"consumer","in":"query","required":false,"type":"string"},{"name":"principal","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/JobStatus"}}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/jobs/retrigger/{task}":{"post":{"tags":["jobs"],"summary":"retrigger","description":"Re-trigger cron jobs","operationId":"retrigger","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"task","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""},"500":{"description":""}},"security":[{"basic":[]}]}},"/jobs/schedule/{task}":{"post":{"tags":["jobs"],"summary":"schedule","description":"Fires cron jobs asynchronously and immediately","operationId":"schedule","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"task","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobStatus"}},"400":{"description":""},"500":{"description":""}},"security":[{"basic":[]}]}},"/jobs/scheduler":{"get":{"tags":["jobs"],"summary":"getSchedulerStatus","description":"Retrieves the Scheduler Status","operationId":"getSchedulerStatus","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/SchedulerStatus"}}},"security":[{"basic":[]}]},"post":{"tags":["jobs"],"summary":"setSchedulerStatus","description":"Updates the Scheduler Status","operationId":"setSchedulerStatus","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/SchedulerStatus"}},"500":{"description":""}},"security":[{"basic":[]}]}},"/jobs/{job_id}":{"get":{"tags":["jobs"],"summary":"getStatus","description":"Retrieves a single Job Status","operationId":"getStatus","produces":["application/json"],"parameters":[{"name":"job_id","in":"path","required":true,"type":"string"},{"name":"result_data","in":"query","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobStatus"}}},"security":[{"basic":[]}]},"post":{"tags":["jobs"],"summary":"getStatusAndDeleteIfFinished","description":"Retrieves a Job Status and Removes if finished","operationId":"getStatusAndDeleteIfFinished","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"job_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobStatus"}}},"security":[{"basic":[]}]},"delete":{"tags":["jobs"],"summary":"cancel","description":"Cancels a Job Status","operationId":"cancel","produces":["application/json"],"parameters":[{"name":"job_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobStatus"}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/owners":{"get":{"tags":["owners"],"summary":"List Owners","description":"Retrieves a list of Owners","operationId":"list","produces":["application/json"],"parameters":[{"name":"key","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Owner"}}}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Create Owner","description":"Creates an Owner","operationId":"createOwner","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"owner","required":true,"schema":{"$ref":"#/definitions/Owner"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Owner"}},"400":{"description":"Invalid owner specified in body"}},"security":[{"basic":[]}]}},"/owners/subscriptions":{"put":{"tags":["owners"],"summary":"Update Subscription","description":"Updates a Subscription for an Owner.  Please update pools directly with POST /pools.","operationId":"updateSubscription","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"subscription","required":true,"schema":{"$ref":"#/definitions/Subscription"}}],"responses":{"404":{"description":"Owner not found"}},"security":[{"basic":[]}],"deprecated":true}},"/owners/{owner_key}":{"get":{"tags":["owners"],"summary":"Get Owner","description":"Retrieves a single Owner","operationId":"getOwner","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Owner"}},"404":{"description":"An owner not found"}},"security":[{"basic":[]}]},"put":{"tags":["owners"],"summary":"Update Owner","description":"To un-set the defaultServiceLevel for an owner, submit an empty string.","operationId":"updateOwner","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"owner","required":true,"schema":{"$ref":"#/definitions/Owner"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Owner"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"delete":{"tags":["owners"],"summary":"Delete Owner","description":"Removes an Owner","operationId":"deleteOwner","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"revoke","in":"query","required":false,"type":"boolean","default":true},{"name":"force","in":"query","required":false,"type":"boolean","default":false}],"responses":{"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/activation_keys":{"get":{"tags":["owners"],"summary":"Owner Activation Keys","description":"Retrieves a list of Activation Keys for an Owner","operationId":"ownerActivationKeys","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"name","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ActivationKey"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Create Activation Key","description":"Creates an Activation Key for the Owner","operationId":"createActivationKey","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"activation_key","required":true,"schema":{"$ref":"#/definitions/ActivationKey"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ActivationKey"}},"400":{"description":"Invalid activation key"},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/atom":{"get":{"tags":["owners"],"summary":"Get Atom Feed","description":"Retrieves an Event Atom Feed for an owner","operationId":"getOwnerAtomFeed","produces":["application/atom+xml"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/feed"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/consumers":{"get":{"tags":["owners"],"summary":"List Consumers","description":"Retrieve a list of Consumers for the Owner","operationId":"listConsumers","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"username","in":"query","required":false,"type":"string"},{"name":"type","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"uuid","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"hypervisor_id","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"fact","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"sku","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"subscription_id","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"contract","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Consumer"}}},"400":{"description":"Invalid request"},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/consumers/count":{"get":{"tags":["owners"],"summary":"consumers count","description":"Retrieve a count of Consumers for the Owner","operationId":"countConsumers","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"type","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"sku","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"subscription_id","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"contract","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"integer","format":"int32"}},"400":{"description":"Invalid request"},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/content":{"get":{"tags":["owners"],"summary":"list","description":"Retrieves list of Content","operationId":"listContent","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Content"}}}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"createContent","description":"Creates a Content","operationId":"createContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"content","required":true,"schema":{"$ref":"#/definitions/ContentData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ContentData"}}},"security":[{"basic":[]}]}},"/owners/{owner_key}/content/batch":{"post":{"tags":["owners"],"summary":"createBatchContent","description":"Creates Contents in bulk","operationId":"createBatchContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"contents","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ContentData"}}}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ContentData"}}}},"security":[{"basic":[]}]}},"/owners/{owner_key}/content/{content_id}":{"get":{"tags":["owners"],"summary":"getContent","description":"Retrieves a single Content","operationId":"getContent","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ContentData"}},"400":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["owners"],"summary":"updateContent","description":"Updates a Content","operationId":"updateContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"},{"in":"body","name":"content","required":true,"schema":{"$ref":"#/definitions/ContentData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ContentData"}}},"security":[{"basic":[]}]},"delete":{"tags":["owners"],"summary":"remove","description":"Deletes a Content","operationId":"remove","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/entitlements":{"get":{"tags":["owners"],"summary":"List Owner Entitlements","description":"Retrieves the list of Entitlements for an Owner","operationId":"ownerEntitlements","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product","in":"query","required":false,"type":"string"},{"name":"matches","in":"query","required":false,"type":"string"},{"name":"attribute","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Entitlement"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Heal owner","description":"Starts an asynchronous healing for the given Owner. At the end of the process the idea is that all of the consumers in the owned by the Owner will be up to date.","operationId":"healEntire","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","description":"ownerKey id of the owner to be healed.","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/environments":{"get":{"tags":["owners"],"summary":"List environments","description":"Retrieves a list of Environments for an Owner","operationId":"listEnvironments","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"name","in":"query","description":"Environment name filter to search for.","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Environment"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Create environment","description":"Creates an Environment for an Owner","operationId":"createEnv","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"environment","required":true,"schema":{"$ref":"#/definitions/Environment"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Environment"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/events":{"get":{"tags":["owners"],"summary":"Get Events","description":"Retrieves a list of Events for an Owner","operationId":"getEvents","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Event"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/hypervisors":{"get":{"tags":["owners"],"summary":"Get Hypervisors","description":"Retrieves a list of Hypervisors for an Owner","operationId":"getHypervisors","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"hypervisor_id","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Consumer"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/imports":{"get":{"tags":["owners"],"summary":"Get Imports","description":" Retrieves a list of Import Records for an Owner","operationId":"getImports","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ImportRecord"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Import Manifest","description":"Imports a manifest zip file for the given organization. This will bring in any products, content, and subscriptions that were assigned to the distributor who generated the manifest.","operationId":"importManifest","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"force","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/MultipartInput"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ImportRecord"}},"400":{"description":""},"500":{"description":""},"404":{"description":"Owner not found"},"409":{"description":""}},"security":[{"basic":[]}],"deprecated":true},"delete":{"tags":["owners"],"summary":"Undo Imports","description":"Removes Imports for an Owner. Cleans out all imported subscriptions and triggers a background refresh pools. Link to an upstream distributor is removed for the owner, so they can import from another distributor. Other owners can also now import the manifests originally used in this owner. This  call does not differentiate between any specific import, it just destroys all subscriptions with an upstream pool ID, essentially anything from an import. Custom subscriptions will be left alone. Imports do carry rules and product information which is global to the candlepin server. This import data is *not* undone, we assume that updates to this data can be safely kept. ","operationId":"undoImports","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/imports/async":{"post":{"tags":["owners"],"summary":"Import Manifest Asynchronously","description":"Initiates an asynchronous manifest import for the given organization. This will bring in any products, content, and subscriptions that were assigned to the distributor who generated the manifest.","operationId":"importManifestAsync","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"force","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/MultipartInput"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"400":{"description":""},"500":{"description":""},"404":{"description":"Owner not found"},"409":{"description":""}},"security":[{"basic":[]}]}},"/owners/{owner_key}/info":{"get":{"tags":["owners"],"summary":"Get Owner Info","description":"Retrieves the Owner Info for an Owner","operationId":"getOwnerInfo","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/OwnerInfo"}},"404":{"description":"An owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/log":{"put":{"tags":["owners"],"summary":"Set Log Level","description":"Sets the Log Level for an Owner","operationId":"setLogLevel","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"level","in":"query","required":false,"type":"string","default":"DEBUG","enum":["ALL","TRACE","DEBUG","INFO","WARN","ERROR","OFF"]}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Owner"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"delete":{"tags":["owners"],"summary":"Remove Log Level","description":"Remove the Log Level of an Owner","operationId":"deleteLogLevel","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/pools":{"get":{"tags":["owners"],"summary":"List Pools","description":"Retrieves a list of Pools for an Owner","operationId":"listPools","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"consumer","in":"query","required":false,"type":"string"},{"name":"activation_key","in":"query","required":false,"type":"string"},{"name":"product","in":"query","required":false,"type":"string"},{"name":"subscription","in":"query","required":false,"type":"string"},{"name":"listall","in":"query","description":"Include pools that are not suited to the unit's facts.","required":false,"type":"boolean","default":false},{"name":"activeon","in":"query","description":"Date to use as current time for lookup criteria. Defaults to current date if not specified.","required":false,"type":"string","default":"now","format":"date-time"},{"name":"matches","in":"query","description":"Find pools matching the given pattern in a variety of fields * and ? wildcards are supported.","required":false,"type":"string"},{"name":"attribute","in":"query","description":"The attributes to return based on the specified types.","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"add_future","in":"query","description":"When set to true, it will add future dated pools to the result, based on the activeon date.","required":false,"type":"boolean","default":false},{"name":"only_future","in":"query","description":"When set to true, it will return only future dated pools to the result, based on the activeon date.","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/pool"}}},"400":{"description":"Invalid request"},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Create Pool","description":"Creates a custom pool for an Owner. Floating pools are not tied to any upstream subscription, and are most commonly used for custom content delivery in Satellite. Also helps in on-site deployment testing","operationId":"createPool","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"pool","required":true,"schema":{"$ref":"#/definitions/pool"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/pool"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"put":{"tags":["owners"],"summary":"Update Pool","description":"Updates a pool for an Owner. assumes this is a normal pool, and errors out otherwise cause we cannot create master pools from bonus pools TODO: while this method replaces the now deprecated updateSubsciption, it still uses it underneath. We need to re-implement the wheel like we did in createPool ","operationId":"updatePool","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"pool","required":true,"schema":{"$ref":"#/definitions/pool"}}],"responses":{"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/products":{"get":{"tags":["owners"],"summary":"List Products for an Owner","description":"Retrieves a list of Products","operationId":"listProducts","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Product"}}}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"createProduct","description":"Creates a Product.  Returns either the new created Product or the Product that already existed.","operationId":"createProduct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/ProductData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}}},"security":[{"basic":[]}]}},"/owners/{owner_key}/products/{product_id}":{"get":{"tags":["owners"],"summary":"getProduct","description":"Retrieves a single Product","operationId":"getProduct","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["owners"],"summary":"updateProduct","description":"Updates a Product","operationId":"updateProduct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"},{"in":"body","name":"update","required":true,"schema":{"$ref":"#/definitions/ProductData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["owners"],"summary":"deleteProduct","description":"Removes a Product","operationId":"deleteProduct","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/owners/{owner_key}/products/{product_id}/batch_content":{"post":{"tags":["owners"],"summary":"addBatchContent","description":"Adds one or more Content entities to a Product","operationId":"addBatchContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"},{"in":"body","name":"contentMap","required":true,"schema":{"type":"object","additionalProperties":{"type":"boolean"}}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}}},"security":[{"basic":[]}]}},"/owners/{owner_key}/products/{product_id}/certificate":{"get":{"tags":["owners"],"summary":"getProductCertificate","description":"Retreives a Certificate for a Product","operationId":"getProductCertificate","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cert"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/owners/{owner_key}/products/{product_id}/content/{content_id}":{"post":{"tags":["owners"],"summary":"addContent","description":"Adds a single Content to a Product","operationId":"addContent","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"},{"name":"enabled","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}}},"security":[{"basic":[]}]},"delete":{"tags":["owners"],"summary":"removeContent","description":"Removes a single Content from a Product","operationId":"removeContent","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/products/{product_id}/subscriptions":{"put":{"tags":["owners"],"summary":"refreshPoolsForProduct","description":"Refreshes Pools by Product","operationId":"refreshPoolsForProduct","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"product_id","in":"path","required":true,"type":"string"},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}}},"security":[{"basic":[]}]}},"/owners/{owner_key}/servicelevels":{"get":{"tags":["owners"],"summary":"Get Service Levels","description":"Retrieves a list of Support Levels for an Owner","operationId":"ownerServiceLevels","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","description":"ownerKey id of the owner whose support levels are sought.","required":true,"type":"string"},{"name":"exempt","in":"query","required":false,"type":"string","default":"false"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/subscriptions":{"get":{"tags":["owners"],"summary":"List Subscriptions","description":"Retrieves a list of Subscriptions for an Owner","operationId":"getSubscriptions","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Subscription"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Create Subscription","description":"Creates a Subscription for an Owner DEPRECATED: Please create pools directly with POST /pools.","operationId":"createSubscription","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/Subscription"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Subscription"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}],"deprecated":true},"put":{"tags":["owners"],"summary":"Update Subscription","description":"Tickle an owner to have all of their entitlement pools synced with their subscriptions. This method (and the one below may not be entirely RESTful, as the updated data is not supplied as an argument. This API call is only relevant in a top level hosted deployment where subscriptions and products are sourced from adapters. Calling this in an on-site deployment is just a no-op.","operationId":"refreshPools","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"},{"name":"auto_create_owner","in":"query","required":false,"type":"boolean","default":false},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/JobDetail"}},"202":{"description":""},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/uebercert":{"get":{"tags":["owners"],"summary":"Get Ueber Entitlement Certificate","description":"Retrieves the Ueber Entitlement Certificate","operationId":"getUeberCertificate","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cert"}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]},"post":{"tags":["owners"],"summary":"Create Ueber Entitlement Certificate","description":"Creates an Ueber Entitlement Certificate. If a certificate already exists, it will be regenerated.","operationId":"createUeberCertificate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cert"}},"400":{"description":""},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/owners/{owner_key}/upstream_consumers":{"get":{"tags":["owners"],"summary":"Get Upstream Consumers","description":" Retrieves a list of Upstream Consumers for an Owner","operationId":"getUpstreamConsumers","produces":["application/json"],"parameters":[{"name":"owner_key","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/UpstreamConsumer"}}},"404":{"description":"Owner not found"}},"security":[{"basic":[]}]}},"/pools":{"get":{"tags":["pools"],"summary":"","description":"Retrieves a list of Pools @deprecated Use the method on /owners","operationId":"list","produces":["application/json"],"parameters":[{"name":"owner","in":"query","required":false,"type":"string"},{"name":"consumer","in":"query","required":false,"type":"string"},{"name":"product","in":"query","required":false,"type":"string"},{"name":"listall","in":"query","description":"Use with consumerUuid to list all pools available to the consumer. This will include pools which would otherwise be omitted due to a rules warning. (i.e. not recommended) Pools that trigger an error however will still be omitted. (no entitlements available, consumer type mismatch, etc)","required":false,"type":"boolean","default":false},{"name":"activeon","in":"query","description":"Uses ISO 8601 format","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/pool"}}},"400":{"description":"if both consumer(unit) and owner are given, or if a product id is specified without a consumer(unit) or owner"},"403":{"description":""},"404":{"description":"if a specified consumer(unit) or owner is not found"}},"security":[{"basic":[]}],"deprecated":true}},"/pools/{pool_id}":{"get":{"tags":["pools"],"summary":"getPool","description":"Retrieves a single Pool","operationId":"getPool","produces":["application/json"],"parameters":[{"name":"pool_id","in":"path","required":true,"type":"string"},{"name":"consumer","in":"query","required":false,"type":"string"},{"name":"activeon","in":"query","description":"Uses ISO 8601 format","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/pool"}},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["pools"],"summary":"deletePool","description":"Remove a Pool","operationId":"deletePool","produces":["application/json"],"parameters":[{"name":"pool_id","in":"path","required":true,"type":"string"}],"responses":{"404":{"description":"if the pool with the specified id is not found"}},"security":[{"basic":[]}]}},"/pools/{pool_id}/cdn":{"get":{"tags":["pools"],"summary":"getPoolCdn","description":"Retrieve a CDN for a Pool","operationId":"getPoolCdn","produces":["application/json"],"parameters":[{"name":"pool_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Cdn"}},"400":{"description":""}},"security":[{"basic":[]}]}},"/pools/{pool_id}/entitlements":{"get":{"tags":["pools"],"summary":"getPoolEntitlements","description":"Retrieve a list of Entitlements for a Pool","operationId":"getPoolEntitlements","produces":["application/json"],"parameters":[{"name":"pool_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Entitlement"}}},"400":{"description":""}},"security":[{"basic":[]}]}},"/products":{"post":{"tags":["products"],"summary":"createProduct","description":"Creates a Product. Returns either the new created Product or the Product that already existed. @deprecated Use per-org version","operationId":"createProduct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/ProductData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}}},"security":[{"basic":[]}],"deprecated":true}},"/products/owners":{"get":{"tags":["products"],"summary":"getProductOwners","description":"Retrieves a list of Owners by Product","operationId":"getProductOwners","produces":["application/json"],"parameters":[{"name":"product","in":"query","description":"Multiple product UUIDs","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Owner"}}},"400":{"description":""}},"security":[{"basic":[]}]}},"/products/subscriptions":{"put":{"tags":["products"],"summary":"refreshPoolsForProduct","description":"Refreshes Pools by Product","operationId":"refreshPoolsForProduct","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"product","in":"query","description":"Multiple product UUIDs","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"lazy_regen","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/JobDetail"}}}},"security":[{"basic":[]}]}},"/products/{product_uuid}":{"get":{"tags":["products"],"summary":"getProduct","description":"Retrieves a single Product","operationId":"getProduct","produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}},"404":{"description":""}},"security":[{"basic":[]}]},"put":{"tags":["products"],"summary":"updateProduct","description":"Updates a Product @deprecated Use per-org version","operationId":"updateProduct","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"},{"in":"body","name":"product","required":true,"schema":{"$ref":"#/definitions/ProductData"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}},"400":{"description":""}},"security":[{"basic":[]}],"deprecated":true},"delete":{"tags":["products"],"summary":"deleteProduct","description":"Removes a Product @deprecated Use per-org version","operationId":"deleteProduct","produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}],"deprecated":true}},"/products/{product_uuid}/batch_content":{"post":{"tags":["products"],"summary":"addBatchContent","description":"Adds Content to a Product Batch mode @deprecated Use per-org version","operationId":"addBatchContent","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"type":"object","additionalProperties":{"type":"boolean"}}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}}},"security":[{"basic":[]}],"deprecated":true}},"/products/{product_uuid}/certificate":{"get":{"tags":["products"],"summary":"getProductCertificate","description":"Retreives a Certificate for a Product","operationId":"getProductCertificate","produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/cert"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/products/{product_uuid}/content/{content_id}":{"post":{"tags":["products"],"summary":"addContent","description":"Adds Content to a Product. Single mode @deprecated Use per-org version","operationId":"addContent","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"},{"name":"enabled","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProductData"}}},"security":[{"basic":[]}],"deprecated":true},"delete":{"tags":["products"],"summary":"removeContent","description":"Removes Content from a Product @deprecated Use per-org version","operationId":"removeContent","produces":["application/json"],"parameters":[{"name":"product_uuid","in":"path","required":true,"type":"string"},{"name":"content_id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}],"deprecated":true}},"/roles":{"get":{"tags":["roles"],"summary":"getRoles","description":"Retrieves a list of Roles","operationId":"getRoles","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Role"}}}},"security":[{"basic":[]}]},"post":{"tags":["roles"],"summary":"createRole","description":"Creates a Role","operationId":"createRole","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"role","required":true,"schema":{"$ref":"#/definitions/Role"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/roles/{role_id}":{"get":{"tags":["roles"],"summary":"getRole","description":"Retrieves a single Role","operationId":"getRole","produces":["application/json"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}}},"security":[{"basic":[]}]},"put":{"tags":["roles"],"summary":"updateRole","description":"Updates a Role.  To avoid race conditions, we do not support updating the user or permission collections. Currently this call will only update the role name. See the specific nested POST/DELETE calls for modifying users and permissions.","operationId":"updateRole","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"},{"in":"body","name":"role","required":true,"schema":{"$ref":"#/definitions/Role"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["roles"],"summary":"deleteRole","description":"Removes a Role","operationId":"deleteRole","produces":["*/*"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/roles/{role_id}/permissions":{"post":{"tags":["roles"],"summary":"addRolePermission","description":"Adds a Permission to a Role. Returns the updated Role.","operationId":"addRolePermission","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"},{"in":"body","name":"permissionBlueprint","required":true,"schema":{"$ref":"#/definitions/PermissionBlueprint"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}},"400":{"description":""},"404":{"description":""}},"security":[{"basic":[]}]}},"/roles/{role_id}/permissions/{perm_id}":{"delete":{"tags":["roles"],"summary":"removeRolePermission","description":"Removes a Permission from a Role. Returns the updated Role.","operationId":"removeRolePermission","produces":["application/json"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"},{"name":"perm_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/roles/{role_id}/users/{username}":{"post":{"tags":["roles"],"summary":"addUser","description":"Adds a User to a Role","operationId":"addUser","consumes":["*/*"],"produces":["application/json"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"},{"name":"username","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["roles"],"summary":"deleteUser","description":"Removes a User from a Role","operationId":"deleteUser","produces":["application/json"],"parameters":[{"name":"role_id","in":"path","required":true,"type":"string"},{"name":"username","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Role"}},"404":{"description":""}},"security":[{"basic":[]}]}},"/rules":{"get":{"tags":["rules"],"summary":"get","description":"Retrieves the Rules","operationId":"get","produces":["application/json","text/plain"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}},"503":{"description":""}},"security":[{"basic":[]}]},"post":{"tags":["rules"],"summary":"upload","description":"Uploads the Rules Returns a copy of the uploaded rules.","operationId":"upload","consumes":["application/json","text/plain"],"produces":["text/plain","application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["rules"],"summary":"delete","description":"Removes the Rules  Deletes any uploaded rules, uses bundled rules instead","operationId":"delete","produces":["application/json"],"parameters":[],"responses":{"default":{"description":"successful operation"}},"security":[{"basic":[]}]}},"/serials":{"get":{"tags":["serials"],"summary":"getCertificateSerials","description":"Retrieves a list of Certificate Serials","operationId":"getCertificateSerials","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/CertificateSerial"}}}},"security":[{"basic":[]}]}},"/serials/{serial_id}":{"get":{"tags":["serials"],"summary":"getCertificateSerial","description":"Retrieves single Certificate Serial","operationId":"getCertificateSerial","produces":["application/json"],"parameters":[{"name":"serial_id","in":"path","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/CertificateSerial"}}},"security":[{"basic":[]}]}},"/status":{"get":{"tags":["status"],"summary":"Status","description":"Returns status of the server","operationId":"status","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/status"}}}}},"/subscriptions":{"get":{"tags":["subscriptions"],"summary":"getSubscriptions","description":"Retrieves a list of Subscriptions","operationId":"getSubscriptions","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Subscription"}}}},"security":[{"basic":[]}]},"post":{"tags":["subscriptions"],"summary":"activateSubscription","description":"Activates a Subscription","operationId":"activateSubscription","consumes":["*/*"],"produces":["*/*"],"parameters":[{"name":"consumer_uuid","in":"query","required":true,"type":"string"},{"name":"email","in":"query","required":true,"type":"string"},{"name":"email_locale","in":"query","required":true,"type":"string"}],"responses":{"400":{"description":""},"202":{"description":""},"503":{"description":""}},"security":[{"basic":[]}]}},"/subscriptions/{subscription_id}":{"get":{"tags":["subscriptions"],"summary":"getSubscription","description":"Retrieves a single Subscription","operationId":"getSubscription","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"subscription_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Subscription"}},"400":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["subscriptions"],"summary":"deleteSubscription","description":"Removes a Subscription","operationId":"deleteSubscription","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"subscription_id","in":"path","required":true,"type":"string"}],"responses":{"400":{"description":""}},"security":[{"basic":[]}]}},"/subscriptions/{subscription_id}/cert":{"get":{"tags":["subscriptions"],"summary":"getSubCert","description":"Retrieves a Subscription Certificate","operationId":"getSubCert","consumes":["text/plain","application/json"],"produces":["application/json"],"parameters":[{"name":"subscription_id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/SubscriptionsCertificate"}}},"security":[{"basic":[]}]}},"/users":{"get":{"tags":["users"],"summary":"list","description":"Retrieves a list of Users","operationId":"list","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"security":[{"basic":[]}]},"post":{"tags":["users"],"summary":"createUser","description":"Creates a User","operationId":"createUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"user","required":true,"schema":{"$ref":"#/definitions/UserCreationRequest"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}}},"security":[{"basic":[]}]}},"/users/{username}":{"get":{"tags":["users"],"summary":"getUserInfo","description":"Retrieves a single User","operationId":"getUserInfo","produces":["application/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}}},"security":[{"basic":[]}]},"put":{"tags":["users"],"summary":"updateUser","description":"Updates a User","operationId":"updateUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"},{"in":"body","name":"user","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"404":{"description":""}},"security":[{"basic":[]}]},"delete":{"tags":["users"],"summary":"deleteUser","description":"Removes a User","operationId":"deleteUser","produces":["application/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"}],"responses":{"410":{"description":""}},"security":[{"basic":[]}]}},"/users/{username}/owners":{"get":{"tags":["users"],"summary":"listUsersOwners","description":"Retrieve a list of owners the user can register systems to. Previously this represented owners the user was an admin for. Because the client uses this API call to list the owners a user can register to, when we introduced 'my systems' administrator, we have to change its meaning to listing the owners that can be registered to by default to maintain compatability with released clients.","operationId":"listUsersOwners","produces":["application/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/IterableOwner"}}},"security":[{"basic":[]}]}},"/users/{username}/roles":{"get":{"tags":["users"],"summary":"getUserRoles","description":"Retrieves a list of Roles by User","operationId":"getUserRoles","produces":["application/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Role"}}}},"security":[{"basic":[]}]}}},"securityDefinitions":{"basic":{"description":"Candlepin requires HTTP Basic authentication of an owner","type":"basic"}},"definitions":{"Serializable":{"type":"object"},"Owner":{"type":"object","required":["displayName","id","key"],"properties":{"parentOwner":{"$ref":"#/definitions/NestedOwner"},"id":{"type":"string","readOnly":true},"key":{"type":"string","minLength":0,"maxLength":255},"displayName":{"type":"string","minLength":0,"maxLength":255},"contentPrefix":{"type":"string","minLength":0,"maxLength":255},"defaultServiceLevel":{"type":"string","minLength":0,"maxLength":255},"upstreamConsumer":{"$ref":"#/definitions/UpstreamConsumer"},"logLevel":{"type":"string","minLength":0,"maxLength":32},"autobindDisabled":{"type":"boolean","default":false},"contentAccessMode":{"type":"string"},"contentAccessModeList":{"type":"string"},"href":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Product":{"type":"object","required":["id","name","uuid"],"properties":{"uuid":{"type":"string"},"id":{"type":"string"},"name":{"type":"string","minLength":0,"maxLength":255},"multiplier":{"type":"integer","format":"int64"},"attributes":{"type":"object","additionalProperties":{"type":"string"}},"productContent":{"type":"array","items":{"$ref":"#/definitions/ProductContent"}},"dependentProductIds":{"type":"array","items":{"type":"string"}},"entityVersion":{"type":"integer","format":"int32"},"href":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"cert":{"type":"object","required":["cert","key"],"properties":{"key":{"type":"string"},"cert":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}},"xml":{"name":"cert"}},"Cdn":{"type":"object","required":["id","label","name","url"],"properties":{"id":{"type":"string"},"label":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"url":{"type":"string","minLength":0,"maxLength":255},"certificate":{"$ref":"#/definitions/CdnCertificate"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"JobDetail":{"type":"object","properties":{"durable":{"type":"boolean","default":false},"concurrentExectionDisallowed":{"type":"boolean","default":false},"persistJobDataAfterExecution":{"type":"boolean","default":false},"jobDataMap":{"type":"object","additionalProperties":{"type":"object"}},"jobBuilder":{"$ref":"#/definitions/JobBuilder"},"key":{"$ref":"#/definitions/JobKey"},"description":{"type":"string"}}},"JobKey":{"type":"object","properties":{"name":{"type":"string"},"group":{"type":"string"}}},"CdnCertificate":{"type":"object","required":["cert","id","key"],"properties":{"key":{"type":"string"},"cert":{"type":"string"},"serial":{"$ref":"#/definitions/CertificateSerial"},"id":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"InputPart":{"type":"object","properties":{"contentTypeFromMessage":{"type":"boolean","default":false},"bodyAsString":{"type":"string"},"headers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"mediaType":{"$ref":"#/definitions/MediaType"}}},"ContentData":{"type":"object","required":["id"],"properties":{"created":{"type":"string","format":"date-time"},"updated":{"type":"string","format":"date-time"},"uuid":{"type":"string","example":"ff808081554a3e4101554a3e9033005d"},"id":{"type":"string","example":"5001"},"type":{"type":"string","example":"yum"},"label":{"type":"string","example":"content_label"},"name":{"type":"string","example":"content_name"},"vendor":{"type":"string","example":"example-vendor"},"contentUrl":{"type":"string","example":"/admin/foo/example/path"},"requiredTags":{"type":"string","example":"TAG1,TAG2"},"gpgUrl":{"type":"string","example":"/admin/foo/example/gpg/path"},"metadataExpire":{"type":"integer","format":"int64","example":1467124079},"modifiedProductIds":{"type":"array","example":"[5051,5052,5053]","items":{"type":"string"}},"arches":{"type":"string","example":"x86_64"},"releaseVer":{"type":"string"}}},"Consumer":{"type":"object","required":["entitlementCount","id","name","uuid"],"properties":{"id":{"type":"string"},"uuid":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"username":{"type":"string","minLength":0,"maxLength":255},"entitlementStatus":{"type":"string","minLength":0,"maxLength":32},"serviceLevel":{"type":"string","minLength":0,"maxLength":255},"releaseVer":{"$ref":"#/definitions/Release"},"idCert":{"$ref":"#/definitions/IdentityCertificate"},"type":{"$ref":"#/definitions/consumertype"},"owner":{"$ref":"#/definitions/NestedOwner"},"environment":{"$ref":"#/definitions/Environment"},"entitlementCount":{"type":"integer","format":"int64"},"facts":{"type":"object","additionalProperties":{"type":"string"}},"lastCheckin":{"type":"string","format":"date-time"},"installedProducts":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ConsumerInstalledProduct"}},"canActivate":{"type":"boolean","default":false},"guestIds":{"type":"array","items":{"type":"object"}},"capabilities":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/consumercapability"}},"hypervisorId":{"$ref":"#/definitions/HypervisorId"},"contentTags":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"autoheal":{"type":"boolean","default":false},"contentAccessMode":{"type":"string"},"recipientOwnerKey":{"type":"string"},"annotations":{"type":"string"},"href":{"type":"string"},"dev":{"type":"boolean","default":false},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"MediaType":{"type":"object","properties":{"type":{"type":"string"},"subtype":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}},"wildcardSubtype":{"type":"boolean","default":false},"wildcardType":{"type":"boolean","default":false}}},"OwnerInfo":{"type":"object","properties":{"consumerCounts":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}},"consumerGuestCounts":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}},"entitlementsConsumedByType":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}},"consumerTypeCountByPool":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}},"enabledConsumerTypeCountByPool":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}},"consumerCountsByComplianceStatus":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}},"entitlementsConsumedByFamily":{"type":"object","additionalProperties":{"$ref":"#/definitions/ConsumptionTypeCounts"}}}},"ProductContentData":{"type":"object","properties":{"content":{"$ref":"#/definitions/ContentData"},"enabled":{"type":"boolean","default":false}}},"Subscription":{"type":"object","properties":{"created":{"type":"string","format":"date-time"},"updated":{"type":"string","format":"date-time"},"id":{"type":"string"},"owner":{"$ref":"#/definitions/NestedOwner"},"product":{"$ref":"#/definitions/ProductData"},"derivedProduct":{"$ref":"#/definitions/ProductData"},"providedProducts":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ProductData"}},"derivedProvidedProducts":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ProductData"}},"branding":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Branding"}},"quantity":{"type":"integer","format":"int64"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"contractNumber":{"type":"string"},"accountNumber":{"type":"string"},"modified":{"type":"string","format":"date-time"},"orderNumber":{"type":"string"},"upstreamPoolId":{"type":"string"},"upstreamEntitlementId":{"type":"string"},"upstreamConsumerId":{"type":"string"},"cdn":{"$ref":"#/definitions/Cdn"},"stacked":{"type":"boolean","default":false},"stackId":{"type":"string"},"certificate":{"$ref":"#/definitions/SubscriptionsCertificate"}}},"QueueStatus":{"type":"object","properties":{"queueName":{"type":"string"},"pendingMessageCount":{"type":"integer","format":"int64"}}},"IdentityCertificate":{"type":"object","required":["cert","id","key"],"properties":{"key":{"type":"string"},"cert":{"type":"string"},"serial":{"$ref":"#/definitions/CertificateSerial"},"id":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ActivationKeyContentOverride":{"type":"object","required":["contentLabel","name","value"],"properties":{"contentLabel":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"value":{"type":"string","minLength":0,"maxLength":255},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"consumercapability":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string","minLength":0,"maxLength":255}},"xml":{"name":"consumercapability"}},"MultipartInput":{"type":"object","properties":{"preamble":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/InputPart"}}}},"NestedOwner":{"type":"object","required":["displayName","id","key"],"properties":{"id":{"type":"string","readOnly":true},"key":{"type":"string","minLength":0,"maxLength":255},"displayName":{"type":"string","minLength":0,"maxLength":255},"href":{"type":"string"}}},"ComplianceStatus":{"type":"object","properties":{"date":{"type":"string","format":"date-time"},"compliantUntil":{"type":"string","format":"date-time"},"nonCompliantProducts":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"compliantProducts":{"type":"object","additionalProperties":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Entitlement"}}},"partiallyCompliantProducts":{"type":"object","additionalProperties":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Entitlement"}}},"partialStacks":{"type":"object","additionalProperties":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Entitlement"}}},"productComplianceDateRanges":{"type":"object","additionalProperties":{"$ref":"#/definitions/DateRange"}},"reasons":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ComplianceReason"}},"compliant":{"type":"boolean","default":false},"status":{"type":"string"}}},"poolquantity":{"type":"object","properties":{"pool":{"$ref":"#/definitions/pool"},"quantity":{"type":"integer","format":"int32"}},"xml":{"name":"poolquantity"}},"AKContentOverride":{"type":"object","properties":{"contentLabel":{"type":"string"},"name":{"type":"string"},"value":{"type":"string"}}},"pool":{"type":"object","required":["consumed","endDate","exported","id","owner","quantity","shared","startDate","type"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["NORMAL","ENTITLEMENT_DERIVED","STACK_DERIVED","SHARE_DERIVED","BONUS","UNMAPPED_GUEST","DEVELOPMENT"]},"owner":{"$ref":"#/definitions/NestedOwner"},"activeSubscription":{"type":"boolean","default":false},"sourceEntitlement":{"$ref":"#/definitions/NestedEntitlement"},"quantity":{"type":"integer","format":"int64"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"attributes":{"type":"object","additionalProperties":{"type":"string"}},"restrictedToUsername":{"type":"string","minLength":0,"maxLength":255},"contractNumber":{"type":"string","minLength":0,"maxLength":255},"accountNumber":{"type":"string","minLength":0,"maxLength":255},"orderNumber":{"type":"string","minLength":0,"maxLength":255},"consumed":{"type":"integer","format":"int64"},"exported":{"type":"integer","format":"int64"},"shared":{"type":"integer","format":"int64","minimum":0.0},"branding":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Branding"}},"calculatedAttributes":{"type":"object","additionalProperties":{"type":"string"}},"upstreamPoolId":{"type":"string","minLength":0,"maxLength":255},"upstreamEntitlementId":{"type":"string","minLength":0,"maxLength":37},"upstreamConsumerId":{"type":"string","minLength":0,"maxLength":255},"productId":{"type":"string"},"derivedProductAttributes":{"type":"object","additionalProperties":{"type":"string"}},"derivedProductId":{"type":"string"},"href":{"type":"string"},"productAttributes":{"type":"object","additionalProperties":{"type":"string"}},"productName":{"type":"string"},"developmentPool":{"type":"boolean","default":false},"stacked":{"type":"boolean","default":false},"stackId":{"type":"string"},"derivedProductName":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true},"providedProducts":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ProvidedProduct"}},"derivedProvidedProducts":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ProvidedProduct"}},"sourceStackId":{"type":"string","readOnly":true},"subscriptionId":{"type":"string"},"subscriptionSubKey":{"type":"string"}},"xml":{"name":"pool"}},"JobBuilder":{"type":"object"},"EnvironmentContent":{"type":"object","required":["content","id"],"properties":{"id":{"type":"string"},"content":{"$ref":"#/definitions/Content"},"enabled":{"type":"boolean","default":false},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"UpstreamConsumer":{"type":"object","required":["id","name","ownerId","type","uuid"],"properties":{"id":{"type":"string"},"uuid":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"idCert":{"$ref":"#/definitions/IdentityCertificate"},"type":{"$ref":"#/definitions/consumertype"},"ownerId":{"type":"string"},"contentAccessMode":{"type":"string","minLength":0,"maxLength":255},"webUrl":{"type":"string"},"apiUrl":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ProvidedProduct":{"type":"object","properties":{"productId":{"type":"string"},"productName":{"type":"string"}}},"ActivationKey":{"type":"object","required":["id","name","owner"],"properties":{"id":{"type":"string"},"name":{"type":"string","minLength":0,"maxLength":255},"description":{"type":"string","minLength":0,"maxLength":255},"owner":{"$ref":"#/definitions/NestedOwner"},"pools":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ActivationKeyPool"}},"products":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Product"}},"contentOverrides":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ActivationKeyContentOverride"}},"releaseVer":{"$ref":"#/definitions/Release"},"serviceLevel":{"type":"string","minLength":0,"maxLength":255},"autoAttach":{"type":"boolean","default":false},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ProductContent":{"type":"object","required":["content"],"properties":{"content":{"$ref":"#/definitions/Content"},"enabled":{"type":"boolean","default":false},"entityVersion":{"type":"integer","format":"int32"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Role":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"users":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/User"}},"permissions":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/PermissionBlueprint"}},"name":{"type":"string","minLength":0,"maxLength":255},"href":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"entry":{"type":"object","properties":{"title":{"type":"string"},"links":{"type":"array","items":{"$ref":"#/definitions/link"}},"categories":{"type":"array","items":{"$ref":"#/definitions/category"}},"updated":{"type":"string","format":"date-time"},"id":{"type":"string","format":"uri"},"published":{"type":"string","format":"date-time"},"author":{"type":"array","items":{"$ref":"#/definitions/Person"}},"contributor":{"type":"array","items":{"$ref":"#/definitions/Person"}},"source":{"$ref":"#/definitions/Source"},"rights":{"type":"string"},"content":{"$ref":"#/definitions/content"},"summary":{"type":"string"},"anyOther":{"type":"array","items":{"type":"object"}},"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}}},"xml":{"name":"entry"}},"feed":{"type":"object","properties":{"title":{"type":"string"},"subtitle":{"type":"string"},"categories":{"type":"array","items":{"$ref":"#/definitions/category"}},"updated":{"type":"string","format":"date-time"},"id":{"type":"string","format":"uri"},"links":{"type":"array","items":{"$ref":"#/definitions/link"}},"author":{"type":"array","items":{"$ref":"#/definitions/Person"}},"contributor":{"type":"array","items":{"$ref":"#/definitions/Person"}},"rights":{"type":"string"},"icon":{"type":"string","format":"uri"},"logo":{"type":"string","format":"uri"},"generator":{"$ref":"#/definitions/generator"},"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"entries":{"type":"array","items":{"$ref":"#/definitions/entry"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}}},"xml":{"name":"feed"}},"SubscriptionsCertificate":{"type":"object","required":["cert","id","key"],"properties":{"key":{"type":"string"},"cert":{"type":"string"},"id":{"type":"string"},"serial":{"$ref":"#/definitions/CertificateSerial"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"GuestId":{"type":"object","required":["guestId","id"],"properties":{"id":{"type":"string"},"guestId":{"type":"string","minLength":0,"maxLength":255},"attributes":{"type":"object","additionalProperties":{"type":"string"}},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Content":{"type":"object","required":["id","label","name","type","uuid","vendor"],"properties":{"uuid":{"type":"string"},"id":{"type":"string","minLength":0,"maxLength":32},"type":{"type":"string","minLength":0,"maxLength":255},"label":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"vendor":{"type":"string","minLength":0,"maxLength":255},"contentUrl":{"type":"string","minLength":0,"maxLength":255},"requiredTags":{"type":"string","minLength":0,"maxLength":255},"gpgUrl":{"type":"string","minLength":0,"maxLength":255},"metadataExpire":{"type":"integer","format":"int64"},"modifiedProductIds":{"type":"array","uniqueItems":true,"items":{"type":"string"},"maxItems":255,"minItems":0},"arches":{"type":"string","minLength":0,"maxLength":255},"entityVersion":{"type":"integer","format":"int32"},"releaseVersion":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Environment":{"type":"object","required":["id","name","owner"],"properties":{"owner":{"$ref":"#/definitions/NestedOwner"},"name":{"type":"string","minLength":0,"maxLength":255},"description":{"type":"string","minLength":0,"maxLength":255},"id":{"type":"string"},"environmentContent":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/EnvironmentContent"}},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Person":{"type":"object","properties":{"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"name":{"type":"string"},"uri":{"type":"string","format":"uri"},"email":{"type":"string"}}},"File":{"type":"object","properties":{"path":{"type":"string"},"name":{"type":"string"},"parent":{"type":"string"},"absolute":{"type":"boolean","default":false},"canonicalPath":{"type":"string"},"parentFile":{"$ref":"#/definitions/File"},"absolutePath":{"type":"string"},"absoluteFile":{"$ref":"#/definitions/File"},"canonicalFile":{"$ref":"#/definitions/File"},"directory":{"type":"boolean","default":false},"file":{"type":"boolean","default":false},"hidden":{"type":"boolean","default":false},"totalSpace":{"type":"integer","format":"int64"},"freeSpace":{"type":"integer","format":"int64"},"usableSpace":{"type":"integer","format":"int64"}}},"DeleteResult":{"type":"object","properties":{"deletedRecords":{"type":"integer","format":"int32"}}},"UserCreationRequest":{"type":"object","required":["password","username"],"properties":{"username":{"type":"string"},"password":{"type":"string"},"superAdmin":{"type":"boolean","default":false}}},"status":{"type":"object","properties":{"mode":{"type":"string","enum":["SUSPEND","NORMAL"]},"modeReason":{"type":"string","enum":["STARTUP","QPID_DOWN","QPID_UP","QPID_FLOW_STOPPED"]},"modeChangeTime":{"type":"string","format":"date-time"},"result":{"type":"boolean","example":true,"default":false},"version":{"type":"string","example":"0.9.10"},"rulesVersion":{"type":"string","example":"5.8"},"release":{"type":"string","example":"1"},"standalone":{"type":"boolean","default":false},"timeUTC":{"type":"string","format":"date-time"},"rulesSource":{"type":"string","enum":["UNDEFINED","DATABASE","DEFAULT"]},"managerCapabilities":{"type":"array","example":"[ \"cores\", \"ram\", \"instance_multiplier\" ]","items":{"type":"string"}}},"description":"Version and Status information about running Candlepin server","xml":{"name":"status"}},"Certificate":{"type":"object","properties":{"updated":{"type":"string","format":"date-time"},"cert":{"type":"string"},"created":{"type":"string","format":"date-time"},"serial":{"$ref":"#/definitions/CertificateSerial"},"key":{"type":"string"},"id":{"type":"string"}}},"consumertype":{"type":"object","required":["id","label","manifest"],"properties":{"id":{"type":"string"},"label":{"type":"string","minLength":0,"maxLength":255},"manifest":{"type":"boolean","default":false},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}},"xml":{"name":"consumertype"}},"serials":{"type":"object","properties":{"serial":{"type":"integer","format":"int64"}},"xml":{"name":"serials"}},"distributorversion":{"type":"object","required":["displayName","id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string","minLength":0,"maxLength":255},"displayName":{"type":"string","minLength":0,"maxLength":255},"capabilities":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/distributorversioncapability"}},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}},"xml":{"name":"distributorversion"}},"User":{"type":"object","required":["id","superAdmin","username"],"properties":{"id":{"type":"string","readOnly":true},"username":{"type":"string","minLength":0,"maxLength":255},"hashedPassword":{"type":"string","readOnly":true,"minLength":0,"maxLength":255},"superAdmin":{"type":"boolean","default":false},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"NestedConsumer":{"type":"object","required":["id","name","uuid"],"properties":{"id":{"type":"string"},"uuid":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"href":{"type":"string"}}},"ImportUpstreamConsumer":{"type":"object","required":["id","name","ownerId","type","uuid"],"properties":{"id":{"type":"string"},"uuid":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"type":{"$ref":"#/definitions/consumertype"},"ownerId":{"type":"string"},"contentAccessMode":{"type":"string","minLength":0,"maxLength":255},"webUrl":{"type":"string"},"apiUrl":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"link":{"type":"object","properties":{"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"href":{"type":"string","format":"uri","xml":{"attribute":true}},"rel":{"type":"string","xml":{"attribute":true}},"type":{"$ref":"#/definitions/MediaType"},"hreflang":{"type":"string","xml":{"attribute":true}},"title":{"type":"string","xml":{"attribute":true}},"length":{"type":"string","xml":{"attribute":true}}},"xml":{"name":"link"}},"generator":{"type":"object","properties":{"value":{"type":"string"},"uri":{"type":"string","format":"uri","xml":{"attribute":true}},"version":{"type":"string","xml":{"attribute":true}},"lang":{"type":"string","xml":{"attribute":true}},"base":{"type":"string","format":"uri","xml":{"attribute":true}}},"xml":{"name":"generator"}},"Branding":{"type":"object","required":["name","productId","type"],"properties":{"productId":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"type":{"type":"string","minLength":0,"maxLength":32},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Source":{"type":"object","properties":{"title":{"type":"string"},"subtitle":{"type":"string"},"categories":{"type":"array","items":{"$ref":"#/definitions/category"}},"updated":{"type":"string","format":"date-time"},"id":{"type":"string","format":"uri"},"links":{"type":"array","items":{"$ref":"#/definitions/link"}},"author":{"type":"array","items":{"$ref":"#/definitions/Person"}},"contributor":{"type":"array","items":{"$ref":"#/definitions/Person"}},"rights":{"type":"string"},"icon":{"type":"string","format":"uri"},"logo":{"type":"string","format":"uri"},"generator":{"$ref":"#/definitions/generator"},"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}}}},"content":{"type":"object","properties":{"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"value":{"type":"array","items":{"type":"object"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"src":{"type":"string","format":"uri","xml":{"attribute":true}},"type":{"type":"string","xml":{"attribute":true}}},"xml":{"name":"content"}},"AKPoolData":{"type":"object","properties":{"poolId":{"type":"string"},"quantity":{"type":"integer","format":"int64"}}},"JobStatus":{"type":"object","required":["id"],"properties":{"id":{"type":"string","minLength":0,"maxLength":255},"state":{"type":"string","enum":["CREATED","PENDING","RUNNING","FINISHED","CANCELED","FAILED","WAITING"]},"startTime":{"type":"string","format":"date-time"},"finishTime":{"type":"string","format":"date-time"},"result":{"type":"string","minLength":0,"maxLength":255},"principalName":{"type":"string","minLength":0,"maxLength":255},"targetType":{"type":"string"},"targetId":{"type":"string","minLength":0,"maxLength":255},"ownerId":{"type":"string","minLength":0,"maxLength":255},"correlationId":{"type":"string"},"resultData":{"type":"object"},"statusPath":{"type":"string"},"done":{"type":"boolean","default":false},"group":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"DateRange":{"type":"object","properties":{"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"}}},"ConsumptionTypeCounts":{"type":"object","properties":{"physical":{"type":"integer","format":"int32"},"guest":{"type":"integer","format":"int32"}}},"distributorversioncapability":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string","minLength":0,"maxLength":255}},"xml":{"name":"distributorversioncapability"}},"PrincipalData":{"type":"object","properties":{"type":{"type":"string"},"name":{"type":"string"}}},"PermissionBlueprint":{"type":"object","required":["id","owner","type"],"properties":{"id":{"type":"string"},"owner":{"$ref":"#/definitions/NestedOwner"},"access":{"type":"string","enum":["NONE","READ_ONLY","CREATE","ALL"]},"type":{"type":"string","enum":["OWNER","OWNER_POOLS","USERNAME_CONSUMERS","USERNAME_CONSUMERS_ENTITLEMENTS","ATTACH"]},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ContentOverride":{"type":"object","required":["contentLabel","name","value"],"properties":{"contentLabel":{"type":"string","minLength":0,"maxLength":255},"name":{"type":"string","minLength":0,"maxLength":255},"value":{"type":"string","minLength":0,"maxLength":255},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Release":{"type":"object","properties":{"releaseVer":{"type":"string"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ProductData":{"type":"object","required":["id"],"properties":{"created":{"type":"string","format":"date-time"},"updated":{"type":"string","format":"date-time"},"uuid":{"type":"string","example":"ff808081554a3e4101554a3e9033005d"},"id":{"type":"string","example":"5051"},"name":{"type":"string","example":"Admin OS Developer Bits"},"multiplier":{"type":"integer","format":"int64","example":1},"attributes":{"type":"object","additionalProperties":{"type":"string"}},"dependentProductIds":{"type":"array","items":{"type":"string"}},"href":{"type":"string","example":"/products/ff808081554a3e4101554a3e9033005d"},"productContent":{"type":"array","items":{"$ref":"#/definitions/ProductContentData"}}},"description":"Product information for a given sku or product"},"SchedulerStatus":{"type":"object","properties":{"running":{"type":"boolean","default":false}}},"ConsumerInstalledProduct":{"type":"object","required":["id","productId"],"properties":{"id":{"type":"string"},"productId":{"type":"string","minLength":0,"maxLength":255},"productName":{"type":"string","minLength":0,"maxLength":255},"version":{"type":"string","minLength":0,"maxLength":20},"arch":{"type":"string","minLength":0,"maxLength":63},"status":{"type":"string"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"AKProductData":{"type":"object","properties":{"productId":{"type":"string"}}},"CertificateSerial":{"type":"object","required":["collected","id","revoked"],"properties":{"id":{"type":"integer","format":"int64"},"revoked":{"type":"boolean","default":false},"collected":{"type":"boolean","default":false},"expiration":{"type":"string","format":"date-time"},"serial":{"type":"integer"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ActivationKeyPool":{"type":"object","required":["id","pool"],"properties":{"id":{"type":"string"},"pool":{"$ref":"#/definitions/pool"},"quantity":{"type":"integer","format":"int64"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ImportRecord":{"type":"object","required":["id"],"properties":{"id":{"$ref":"#/definitions/Serializable"},"status":{"type":"string","enum":["SUCCESS","FAILURE","DELETE","SUCCESS_WITH_WARNING"]},"statusMessage":{"type":"string","minLength":0,"maxLength":255},"fileName":{"type":"string","minLength":0,"maxLength":255},"generatedBy":{"type":"string","minLength":0,"maxLength":255},"generatedDate":{"type":"string","format":"date-time"},"upstreamConsumer":{"$ref":"#/definitions/ImportUpstreamConsumer"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"DeletedConsumer":{"type":"object","required":["consumerUuid","id","ownerId"],"properties":{"id":{"type":"string"},"consumerUuid":{"type":"string","minLength":0,"maxLength":255},"ownerId":{"type":"string","minLength":0,"maxLength":32},"ownerKey":{"type":"string","minLength":0,"maxLength":255},"ownerDisplayName":{"type":"string","minLength":0,"maxLength":255},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"NestedEntitlement":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"href":{"type":"string"}}},"ActivationKeyData":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"owner":{"$ref":"#/definitions/NestedOwner"},"pools":{"type":"array","items":{"$ref":"#/definitions/AKPoolData"}},"products":{"type":"array","items":{"$ref":"#/definitions/AKProductData"}},"contentOverrides":{"type":"array","items":{"$ref":"#/definitions/AKContentOverride"}},"serviceLevel":{"type":"string"},"autoAttach":{"type":"boolean","default":false},"created":{"type":"string","format":"date-time"},"updated":{"type":"string","format":"date-time"},"releaseVer":{"$ref":"#/definitions/Release"}}},"HypervisorId":{"type":"object","required":["hypervisorId","id"],"properties":{"id":{"$ref":"#/definitions/Serializable"},"hypervisorId":{"type":"string","minLength":0,"maxLength":255},"reporterId":{"type":"string","minLength":0,"maxLength":255},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"Event":{"type":"object","required":["id","target","timestamp","type"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["CREATED","MODIFIED","DELETED","EXPIRED"]},"target":{"type":"string","enum":["CONSUMER","OWNER","ENTITLEMENT","POOL","EXPORT","IMPORT","USER","ROLE","SUBSCRIPTION","ACTIVATIONKEY","GUESTID","RULES","COMPLIANCE","PRODUCT"]},"targetName":{"type":"string","minLength":0,"maxLength":255},"timestamp":{"type":"string","format":"date-time"},"entityId":{"type":"string","minLength":0,"maxLength":255},"ownerId":{"type":"string","minLength":0,"maxLength":255},"consumerId":{"type":"string","minLength":0,"maxLength":255},"referenceId":{"type":"string","minLength":0,"maxLength":255},"referenceType":{"type":"string","enum":["POOL"]},"messageText":{"type":"string"},"principal":{"$ref":"#/definitions/PrincipalData"}}},"category":{"type":"object","properties":{"extensionAttributes":{"type":"object","additionalProperties":{"type":"object"}},"lang":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"base":{"type":"string","format":"uri","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}},"term":{"type":"string","xml":{"attribute":true}},"scheme":{"type":"string","format":"uri","xml":{"attribute":true}},"label":{"type":"string","xml":{"attribute":true}}},"xml":{"name":"category"}},"Entitlement":{"type":"object","required":["consumer","id","pool"],"properties":{"id":{"type":"string"},"consumer":{"$ref":"#/definitions/NestedConsumer"},"pool":{"$ref":"#/definitions/pool"},"certificates":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/cert"}},"quantity":{"type":"integer","format":"int32"},"href":{"type":"string"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"created":{"type":"string","format":"date-time","readOnly":true},"updated":{"type":"string","format":"date-time","readOnly":true}}},"ComplianceReason":{"type":"object","properties":{"key":{"type":"string"},"message":{"type":"string"},"attributes":{"type":"object","additionalProperties":{"type":"string"}}}},"HypervisorCheckInResult":{"type":"object","properties":{"created":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Consumer"}},"updated":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Consumer"}},"unchanged":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/Consumer"}},"failedUpdate":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}}},"externalDocs":{"description":"Project website: ","url":"https://candlepin.github.io/"},"securityRequirement":[{"basic":[]}]}